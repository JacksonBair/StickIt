(()=>{"use strict";chrome.runtime.onMessage.addListener(((r,e,o)=>"createNote"===r.action?(chrome.tabs.query({active:!0,currentWindow:!0}).then((e=>{if(e&&e.length>0&&"number"==typeof e[0].id){const t=e[0].id;if(void 0!==t)return chrome.tabs.get(t,(e=>{if(chrome.runtime.lastError)return console.error("Error getting tab details:",chrome.runtime.lastError),void o({success:!1,error:"Failed to get tab details"});const s=Object.assign(Object.assign({},r),{url:e.url});(function(r,e){(function(r){return new Promise(((e,o)=>{chrome.storage.session.get([`scriptInjected_${r}`],(t=>{chrome.runtime.lastError?(console.error("Error retrieving from storage:",chrome.runtime.lastError),o(chrome.runtime.lastError)):e(!!t[`scriptInjected_${r}`])}))}))})(r).then((o=>{if(o)return console.log(`Script already injected for tab ${r}. Skipping injection.`),void chrome.tabs.sendMessage(r,e,(r=>{chrome.runtime.lastError?console.error("Error sending message to tab:",chrome.runtime.lastError):console.log("Response from content script:",r)}));chrome.scripting.executeScript({target:{tabId:r},files:["injectNoteScript.bundle.js"]}).then((()=>(console.log(`Script injected into tab ${r}`),function(r){return new Promise(((e,o)=>{chrome.storage.session.set({[`scriptInjected_${r}`]:!0},(()=>{chrome.runtime.lastError?(console.error("Error saving to storage:",chrome.runtime.lastError),o(chrome.runtime.lastError)):e()}))}))}(r)))).then((()=>{chrome.tabs.sendMessage(r,e,(r=>{chrome.runtime.lastError?console.error("Error sending message to tab:",chrome.runtime.lastError):console.log("Response from content script:",r)}))})).catch((e=>{console.error(`Error injecting script into tab ${r}:`,e)}))})).catch((r=>{console.error("Error getting injection state:",r)}))})(t,s),o({success:!0})})),!0;console.error("No active tab found"),o({success:!1,error:"No active tab found"})}else console.error("No active tab found"),o({success:!1,error:"No active tab found"})})).catch((r=>{console.error("Error querying tabs:",r),o({success:!1,error:r})})),!0):"getCurrentTabUrl"===r.action?(chrome.tabs.query({active:!0,currentWindow:!0}).then((r=>{r&&r.length>0&&"string"==typeof r[0].url?o({success:!0,url:r[0].url}):o({success:!1,error:"No URL found"})})).catch((r=>{console.error("Error querying tabs:",r),o({success:!1,error:r})})),!0):(o({success:!1,error:"Unknown action"}),!0))),chrome.tabs.onUpdated.addListener(((r,e,o)=>{"complete"===e.status&&o.url&&chrome.scripting.executeScript({target:{tabId:r},files:["injectNoteScript.bundle.js"]},(()=>{chrome.tabs.sendMessage(r,{action:"retrieveNote"},(()=>{(function(r){return new Promise(((e,o)=>{chrome.storage.session.remove([`scriptInjected_${r}`],(()=>{chrome.runtime.lastError?(console.error("Error removing from storage:",chrome.runtime.lastError),o(chrome.runtime.lastError)):e()}))}))})(r).then((()=>{console.log(`Injection state removed for tab ${r}`)})).catch((e=>{console.error(`Error removing injection state for tab ${r}:`,e)}))}))}))})),chrome.action.onClicked.addListener((()=>{console.log("Extension icon clicked, activating service worker."),chrome.runtime.sendMessage({action:"keepAlive"})})),chrome.runtime.onInstalled.addListener((()=>{chrome.storage.session.set({popupShown:!1})})),chrome.action.onClicked.addListener((()=>{chrome.storage.session.get("popupShown",(r=>{r.popupShown?chrome.tabs.create({url:"../pages/dashboard.html"}):(chrome.storage.session.set({popupShown:!0}),chrome.action.openPopup())}))}))})();